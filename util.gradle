ext {

    configureTaskDependencies = { task, dependentTasks ->
        task.dependsOn (dependentTasks)
        for (int i = 0; i < dependentTasks.size () - 1; i++) {
            dependentTasks [i + 1].mustRunAfter dependentTasks [i]
        }
    }

    replaceToken = { filePath, entries ->

        if (entries) {
            File file = new File (filePath)
            if (file.exists ()) {
                String contents = file.getText ('UTF-8')
                entries.each () {
                    if (it.to.contains ('$')) {
                        contents = contents.replace (it.from, it.to)
                    } else {
                        contents = contents.replaceAll (it.from, it.to)
                    }
                }
                new File (filePath).write (contents, 'UTF-8')
            }
        }

    }

    getCustomProperty = { key, defaultValue ->

        if (customProperties == null || customProperties.getProperty (key) == null) {
            return defaultValue
        }
        return customProperties.getProperty (key)
    }

    replaceToken = { filePath, List replacements ->
        def file = new File (filePath)
        if (file.exists ()) {
            String content = file.text
            replacements.each { replacement ->
                content = content.replace (replacement.from, replacement.to)
            }
            file.text = content
        }
    }
}